import numpy as np
import codecs

# Declaring two empty lists. One for words and one for their corresponding vector representation
labels_plot = []
pred_plot = []
vecs_plot = []

labels = []
preds = []
sentences = []

# Getting word and corresponding vector from each line of the model.vec file generated by fasttext
with codecs.open('IMDB_Crawled/model_sentence_Pre.vec', 'r', 'utf-8') as f_in:
    # vocabulary, wv = zip(*[line.strip().split(' ', maxsplit=1) for line in f_in])
    tuples = [line.split(' ', maxsplit=2) for line in f_in]
    for tuple in tuples:
        try:
            label, pred, sent = tuple
        except Exception:
            pass
        labels.append(label)
        preds.append(pred)
        sentences.append(sent)

# Populating the two lists. Need to convert vector values from string to numpy array

for i in range(10, len(labels)):  # Usually skip first 10 words becuase they might be garbage values.
    labels_plot.append(labels[i])
    pred_plot.append(preds[i])
    x = sentences[i]
    vecs_plot.append(np.fromstring(x, dtype='float32', sep=' '))

U, s, Vh = np.linalg.svd(vecs_plot, full_matrices=False)

file = codecs.open("../templates/sent_plot.csv", "w")
file.write(','.join(["label", "pred", "x", "y"]) + "\n")
for i in range(len(labels_plot)):
    score = labels_plot[i].split("__label__")[1]
    prediction = pred_plot[i].split("__label__")[1]
    file.write(','.join([score, prediction, str(U[i, 0]), str(U[i, 1])]) + "\n")
file.close()
